set t_Co=256
set background=dark
colorscheme smyck

let g:snips_author = 'Earle Acosta <eacosta@pointslope.com>'

" Don't clear the screen when I leave "man" 
" http://www.shallowsky.com/linux/noaltscreen.html
set t_ti= t_te=

" Homage to Textmate
nnoremap <leader>t :CtrlP<CR>
nnoremap ; :

" Two j's in a row in Insert mode takes me to command mode!
inoremap jj <ESC>

" Select pasted item
nnoremap <leader>v V`]

let g:vimclojure#HighlightBuiltins=1
let g:vimclojure#ParenRainbow=1
let g:vimclojure#DynamicHighlighting=1

let vimclojure#WantNailgun = 1 
let vimclojure#SplitPos = "right"
let tlist_clojure_settings = 'lisp;f:function'
let tlist_exit_OnlyWindow = 1

" CtrlP Settings

let g:ctrlp_max_height = 10
let g:ctrlp_working_path_mode = 'ra'

" ------------ Custom Mappings -----------

" Edit .vimrc
nmap <silent> <leader>vrc :e $MYVIMRC.local<CR>

" Learn to use Vim
map <Left> <Nop>
map <Right> <Nop>
map <Up> <Nop>
map <Down> <Nop>

" Buffer navigation
nnoremap <leader>1 :1b<cr>
nnoremap <leader>2 :2b<cr>
nnoremap <leader>3 :3b<cr>
nnoremap <leader>4 :4b<cr>
nnoremap <leader>5 :5b<cr>
nnoremap <leader>6 :6b<cr>
nnoremap <leader>7 :7b<cr>
nnoremap <leader>8 :8b<cr>
nnoremap <leader>9 :9b<cr>
nnoremap <leader>0 :10b<cr>

" Text bubbling (requires tpope's vim-unimpaired/vim-repeat)
nmap <C-Up> [e
nmap <C-Down> ]e
vmap <C-Up> [egv
vmap <C-Down> ]egv

" Handle *w*indow splitting with leader
" Pipe looks like a vertical split
nmap <silent> <leader>\ <C-w>v <C-w>l
" Dash looks like a horizontal split
nmap <silent> <leader>- <C-w>s <C-w>j
nmap <silent> <leader>wh <C-w>h
nmap <silent> <leader>wc <C-w>c
nmap <silent> <leader>ww <C-w>w
nmap <silent> <leader>wj <C-w>j
nmap <silent> <leader>wk <C-w>k
nmap <silent> <leader>wl <C-w>l

" Fix searches
nnoremap / /\v
vnoremap / /\v

" cscope
if has("cscope")
  set cscopetag
  set csto=0

  if filereadable("cscope.out")
    cs reset
    cs add cscope.out  
  endif

  " Find all *r*eferences to *s*ymbol under cursor
  nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>
  nmap <C-\>r :cs find s <C-R>=expand("<cword>")<CR><CR>

  " Find *g*lobal definition of token under cursor
  nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>

  " Find *c*alls to function under cursor
  nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>

  " Find all instances of *t*ext under cursor
  nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>

  " Find using *e*grep
  nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>

  " Open *f*ilename under cursor 
  nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>

  " Find files that *i*nclude file under cursor
  nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>

  " Find all functions calle*d*
  nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>
endif

" ------------ Custom Functions ----------
" RENAME CURRENT FILE
function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'), 'file')
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <leader>rf :call RenameFile()<cr>

" Pulse Cusor Line (Steve Losh)
" Keep search matches in the middle of the window and pulse the line when moving to them.
function! PulseCursorLine()
    let current_window = winnr()

    windo set nocursorline
    execute current_window . 'wincmd w'

    setlocal cursorline

    redir => old_hi
        silent execute 'hi CursorLine'
    redir END
    let old_hi = split(old_hi, '\n')[0]
    let old_hi = substitute(old_hi, 'xxx', '', '')

    hi CursorLine guibg=#2a2a2a ctermbg=233
    redraw
    sleep 20m
  
    hi CursorLine guibg=#333333 ctermbg=235
    redraw
    sleep 20m

    hi CursorLine guibg=#3a3a3a ctermbg=237
    redraw
    sleep 20m

    hi CursorLine guibg=#444444 ctermbg=239
    redraw
    sleep 20m

    hi CursorLine guibg=#3a3a3a ctermbg=237
    redraw
    sleep 20m

    hi CursorLine guibg=#333333 ctermbg=235
    redraw
    sleep 20m

    hi CursorLine guibg=#2a2a2a ctermbg=233
    redraw
    sleep 20m

    execute 'hi ' . old_hi

    windo set cursorline
    execute current_window . 'wincmd w'
endfunction

nnoremap n nzzzv:call PulseCursorLine()<cr>
nnoremap N Nzzzv:call PulseCursorLine()<cr>

" Clear the search buffer when hitting return
function! MapCR()
  nnoremap <cr> :nohlsearch<cr>
endfunction
call MapCR()

if has('autocmd')
  " Help vim recognize file extensions
  autocmd BufRead,BufNewFile *.scss set filetype=scss
  autocmd BufRead,BufNewFile *.clj set filetype=clojure
  autocmd BufRead,BufNewFile *.cljs set filetype=clojure
  autocmd BufRead,BufNewFile *.ddl set filetype=sql

  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif
endif	

" ------------ Vim Settings --------------
let loaded_matchparen = 1 " Because paren matching makes me want to kill somebody
set switchbuf=useopen
set timeoutlen=3000
set ttimeout 
set ttimeoutlen=300
set nobackup
set noswapfile
set hlsearch
set incsearch
set tabstop=2
set shiftwidth=2
set shiftround
set autoindent
set copyindent
set numberwidth=5
set ruler
set nowrap
set title
set ignorecase
set smartcase
set smarttab
set showcmd
set showmode
set expandtab
set hidden
set visualbell
set noerrorbells
set scrolloff=3
set showmatch
set gfn=Menlo:h14
set gfw=Menlo:h14
set anti
set backspace=indent,eol,start
set encoding=utf-8 nobomb
set backupskip=/tmp/*,/private/tmp/*
set wildignore+=*.class
